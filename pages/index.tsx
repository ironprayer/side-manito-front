import Head from 'next/head';
import { NextPage } from 'next';
import OngoingGroupList from '@/manito_group/components/OngoingGroupList';

import { QueryClient, dehydrate } from '@tanstack/react-query';

import { USER_INFO_QUERY_KEY } from '@/user/constant/query_key';
import { fetchGroupList } from '@/manito_group/lib/fetch';
import { MANITO_GROUP_LIST_QUERY_KEY } from '@/manito_group/constant/query_key';
import { fetchUserInfo } from '@/user/lib/fetch';
import Header from '@/common/components/Header';
import { getAccessTokenAnyway } from '@/auth/lib/jwt';
import CreateGroup from '@/manito_group/components/CreateGroup';
import { GroupStatus } from '@/manito_group/model/manito_group';
import { useState } from 'react';
import EndedGroupList from '@/manito_group/components/EndedGroupList';
import InvitedGroupList from '@/manito_group/components/InvitedGroupList';
import GroupListTab from '@/manito_group/components/GroupListTab';

const Home: NextPage = () => {
  const [groupListTab, setGroupListTab] = useState(GroupStatus.ONGOING);

  return (
    <>
      <Head>
        <title>Manito</title>
        <meta name='description' content='Generated by create next app' />
        <meta name='viewport' content='width=device-width, initial-scale=1' />
        <link rel='icon' href='/favicon.ico' />
      </Head>
      <Header />
      <main className='pt-20'>
        <CreateGroup />
        <GroupListTab currentStatus={groupListTab} onChangeTab={setGroupListTab} />
        <OngoingGroupList active={groupListTab === GroupStatus.ONGOING} />
        <EndedGroupList active={groupListTab === GroupStatus.ENDED} />
        <InvitedGroupList active={groupListTab === GroupStatus.INVITED} />
      </main>
    </>
  );
};

Home.getInitialProps = async ({ req, res }) => {
  const accessToken = await getAccessTokenAnyway({ req, res });

  const queryClient = new QueryClient();
  await queryClient.prefetchQuery([USER_INFO_QUERY_KEY], () => fetchUserInfo(accessToken));
  await queryClient.prefetchQuery([MANITO_GROUP_LIST_QUERY_KEY, GroupStatus.ONGOING], () =>
    fetchGroupList(GroupStatus.ONGOING, accessToken)
  );

  return {
    dehydratedState: dehydrate(queryClient),
  };
};

export default Home;
