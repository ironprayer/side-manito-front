import { getAccessTokenAnyway } from '@/auth/lib/jwt';
import Header from '@/common/components/Header';
import Chatting from '@/manito_group/components/Room/Chatting';
import WaitingGroupDetail from '@/manito_group/components/Room/WaitingGroupDetail';
import useManitoGroupDetailQuery from '@/manito_group/hooks/query/useManitoGroupDetailQuery';
import { fetchGroupDetail } from '@/manito_group/lib/fetch';
import { GroupStatus, SerializedManitoGroup } from '@/manito_group/model';
import { USER_INFO_QUERY_KEY } from '@/user/constant/query_key';
import { fetchUserInfo } from '@/user/lib/fetch';
import { QueryClient, dehydrate } from '@tanstack/react-query';
import { GetServerSideProps, NextPage } from 'next';
import Head from 'next/head';
import { useRouter } from 'next/router';

const ManitoGroupPage: NextPage<{ initGroupData: SerializedManitoGroup }> = ({ initGroupData }) => {
  const router = useRouter();
  const { data } = useManitoGroupDetailQuery(Number(router.query.groupId), initGroupData);

  return (
    <>
      <Head>
        <title>{`${data?.name} | Manito group page`}</title>
        <meta name='description' content='Generated by create next app' />
        <meta name='viewport' content='width=device-width, initial-scale=1' />
        <link rel='icon' href='/favicon.ico' />
      </Head>
      <Header />
      <main className='pt-20'>
        <div className='flex border-b-2 mx-20 pb-4'>
          <div className='flex-1 w-64 flex justify-end font-bold text-xg'>
            모임이름: {data?.name}
          </div>
          <div className='flex-1 w-32 flex justify-end gap-4'>
            <div>상태: {data?.status}</div>
            <div>
              기간: {data?.startDate?.toLocaleDateString()} ~ {data?.endDate?.toLocaleDateString()}
            </div>
          </div>
        </div>
        {data?.status === GroupStatus.WAITING && <WaitingGroupDetail />}
        {data?.status === GroupStatus.ONGOING && <Chatting />}
      </main>
    </>
  );
};

export const getServerSideProps: GetServerSideProps = async ({ req, res, query }) => {
  const accessToken = await getAccessTokenAnyway({ req, res });
  const groupId = Number(query.groupId);
  const groupDetail = await fetchGroupDetail(groupId, accessToken);
  if (!groupDetail) {
    return {
      notFound: true,
    };
  }

  const queryClient = new QueryClient();
  await queryClient.prefetchQuery([USER_INFO_QUERY_KEY], () => fetchUserInfo(accessToken));
  return {
    props: {
      initGroupData: groupDetail,
      dehydratedState: dehydrate(queryClient),
    },
  };
};

export default ManitoGroupPage;
